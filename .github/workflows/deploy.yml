name: Deploy Super Mario Game to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: supermario-game
      CLUSTER_NAME: super-mario-eks

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Verify Node.js Setup
        run: |
          echo "Node.js version:"
          node -v
          echo "npm version:"
          npm -v
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la

      - name: Install dependencies
        run: |
          if [ -f "package.json" ]; then
            npm install
          else
            echo "package.json not found in current directory:"
            pwd
            echo "Directory contents:"
            ls -la
            exit 1
          fi

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        working-directory: ./terarform-files
        run: |
          if [ -d "." ]; then
            terraform init
          else
            echo "terraform-files directory not found"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi

      - name: Apply Terraform
        working-directory: ./terarform-files
        run: terraform apply -auto-approve

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        working-directory: ./docker
        run: |
          if [ -d "." ]; then
            docker build -t ${{ env.ECR_REPOSITORY }} .
          else
            echo "docker directory not found"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi

      - name: Tag Docker image
        run: docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: docker push ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Update kubeconfig for cluster authentication
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: Update Kubernetes deployment
        working-directory: ./k8s
        run: |
          if [ -d "." ]; then
            kubectl apply -f k8s-deployment.yml
            kubectl set image deployment/supermario-game supermario-game=${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          else
            echo "k8s directory not found"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi