name: Deploy Super Mario Game to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: supermario-game
      CLUSTER_NAME: super-mario-eks

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Debug Environment
        run: |
          echo "Current working directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Runner workspace:"
          echo $GITHUB_WORKSPACE
          echo "Runner workspace contents:"
          ls -la $GITHUB_WORKSPACE

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Debug Node.js Setup
        run: |
          echo "Node.js path:"
          which node || echo "Node not found"
          echo "npm path:"
          which npm || echo "npm not found"
          echo "Node.js version:"
          node --version || echo "Node version check failed"
          echo "npm version:"
          npm --version || echo "npm version check failed"

      - name: Install dependencies
        run: |
          echo "Installing dependencies in:"
          pwd
          npm install

      # Rest of your steps remain the same
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        working-directory: ${{ github.workspace }}/terraform-files
        run: terraform init

      - name: Apply Terraform
        working-directory: ${{ github.workspace }}/terraform-files
        run: terraform apply -auto-approve

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        working-directory: ${{ github.workspace }}/docker
        run: docker build -t ${{ env.ECR_REPOSITORY }} .

      - name: Tag Docker image
        working-directory: ${{ github.workspace }}/docker
        run: docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        working-directory: ${{ github.workspace }}/docker
        run: docker push ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Update kubeconfig for cluster authentication
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: Update Kubernetes deployment
        working-directory: ${{ github.workspace }}/k8s
        run: |
          kubectl apply -f k8s-deployment.yml
          kubectl set image deployment/supermario-game supermario-game=${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest